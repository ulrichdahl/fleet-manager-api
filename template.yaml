
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CORS enabled API Gateway that uses a Lambda TOKEN Authorizer by default

Parameters:
  ApiKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/fleet-manager/prod/apiKey'

Resources: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification.html
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false # removes MyAuthorizer from the automatically created OPTIONS methods
        Authorizers:
          MyAuthorizer:
            FunctionArn: !GetAtt AuthorizerFunction.Arn
      Cors:
        AllowHeaders: "'Authorization'" # this is the default header used by TOKEN authorizers
        AllowOrigin: "'http://localhost:3000'"

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: authorizer.handler
      Runtime: nodejs12.x
      Environment:
        Variables:
          TOKEN: !Ref ApiKey
          RESOURCE: !GetAtt MyApi.Arn

  FleetManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: lambda.handler
      Runtime: nodejs12.x
      Events:
        FleetManager:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /{proxy+}
            Method: ANY

Outputs:
  FleetManagerUrl:
    Description: 'Prod stage URL'
    Value: !Sub 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'